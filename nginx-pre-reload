#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

PLUGIN_BASE_PATH="$PLUGIN_PATH"
if [[ -n $DOKKU_API_VERSION ]]; then
  PLUGIN_BASE_PATH="$PLUGIN_ENABLED_PATH"
fi
source "$PLUGIN_BASE_PATH/common/functions"
source "$PLUGIN_BASE_PATH/certs/functions"
source "$PLUGIN_BASE_PATH/config/functions"
source "$PLUGIN_BASE_PATH/domains/functions"

APP="$1"; APP_ROOT="$DOKKU_ROOT/$APP"
REDIRECT_FILE="$APP_ROOT/REDIRECTS"
[[ ! -s $REDIRECT_FILE ]] && exit 0

NGINX_CONF="$APP_ROOT/nginx.conf"
TEMPLATE="$(dirname "$0")/templates/redirect.conf"
TEMPLATE_TLS="$(dirname "$0")/templates/redirect.tls.conf"
NGINX_PORT=$(config_get "$APP" DOKKU_NGINX_PORT || true)
NGINX_SSL_PORT=$(config_get "$APP" DOKKU_NGINX_SSL_PORT || true)

while read -r line; do
  [[ -z "$line" ]] && continue
  DOMAIN=$(echo "$line" | cut -d: -f1)
  DEST=${line//[^:]*:/}
  dokku_log_info1 "Configuring redirect for $DOMAIN to $DEST..."
  eval "cat <<< \"$(< "$TEMPLATE")\" >> $NGINX_CONF"
  if is_ssl_enabled "$APP"; then
    SSL_HOSTNAME=$(get_ssl_hostnames "$APP")
    [[ -n "$SSL_HOSTNAME" ]] && SSL_HOSTNAME_REGEX=$(echo "$SSL_HOSTNAME" | xargs | sed 's|\.|\\.|g' | sed 's/\*/\[^\.\]\*/g' | sed 's/ /|/g')
    APP_SSL_PATH="$APP_ROOT/tls"
    SSL_DIRECTIVES=$(cat <<EOF
ssl_certificate     $APP_SSL_PATH/server.crt;
ssl_certificate_key $APP_SSL_PATH/server.key;
EOF
)
    eval "cat <<< \"$(< "$TEMPLATE_TLS")\" >> $NGINX_CONF"
  fi
done <<< "$(< "$REDIRECT_FILE")"
